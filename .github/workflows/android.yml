name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Conceder permissão de execução ao gradlew
        run: chmod +x ./gradlew

      - name: Configurar JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Verificar versão do Java
        run: java -version

      - name: Cache de pacotes Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Baixar dependências
        run: ./gradlew dependencies

  build:
    runs-on: ubuntu-latest
    needs: dependencies
    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Conceder permissão de execução ao gradlew
        run: chmod +x ./gradlew

      - name: Configurar JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Verificar versão do Java
        run: java -version

      - name: Compilar Projeto
        run: ./gradlew assemble --scan --continue --daemon

  unit-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Conceder permissão de execução ao gradlew
        run: chmod +x ./gradlew

      - name: Configurar JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Verificar versão do Java
        run: java -version

      - name: Executar Testes Unitários
        run: ./gradlew test --parallel

  integration-tests:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout do código
        uses: actions/checkout@v2

      - name: Testar Conexão com Supabase
        run: |
          echo "Testando conexão com Supabase..."
          url="https://enpcrnmsdcjekxmkrlaf.supabase.co/rest/v1/users"
          apikey="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVucGNybm1zZGNqZWt4bWtybGFmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjU0NDY5NzEsImV4cCI6MjA0MTAyMjk3MX0.BInW3v-YBtlK1OrG9W0uR1qtLEOcEEP7G_I8NpYotyA"
          
          # Testar conexão
          response=$(curl -s -o /dev/null -w "%{http_code}" -H "apikey: $apikey" "$url")
          
          echo "Código de status HTTP da conexão: $response"
          
          if [ "$response" -ne 200 ]; then
            echo "Falha na conexão com Supabase. Código de status HTTP: $response"
            exit 1
          fi
          
          echo "Conexão com Supabase bem-sucedida. Código de status HTTP: $response"

      - name: Testar Inserção de Dados no Supabase
        run: |
          echo "Testando inserção de dados no Supabase..."
          url="https://enpcrnmsdcjekxmkrlaf.supabase.co/rest/v1/users"
          apikey="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVucGNybm1zZGNqZWt4bWtybGFmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjU0NDY5NzEsImV4cCI6MjA0MTAyMjk3MX0.BInW3v-YBtlK1OrG9W0uR1qtLEOcEEP7G_I8NpYotyA"
          
          # Testar inserção de dados
          response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "$url" \
            -H "apikey: $apikey" \
            -H "Content-Type: application/json" \
            -d '{"name": "Test User", "email": "testuser@example.com"}')
          
          echo "Código de status HTTP da inserção: $response"
          
          if [ "$response" -ne 201 ]; then
            echo "Falha na inserção de dados. Código de status HTTP: $response"
            exit 1
          fi
          
          echo "Inserção de dados bem-sucedida. Código de status HTTP: $response"

      - name: Testar Exclusão de Dados no Supabase
        run: |
          echo "Testando exclusão de dados no Supabase..."
          url="https://enpcrnmsdcjekxmkrlaf.supabase.co/rest/v1/users"
          apikey="eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImVucGNybm1zZGNqZWt4bWtybGFmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjU0NDY5NzEsImV4cCI6MjA0MTAyMjk3MX0.BInW3v-YBtlK1OrG9W0uR1qtLEOcEEP7G_I8NpYotyA"
          
          # Encontrar o último ID inserido
          last_id=$(curl -s -H "apikey: $apikey" "$url?select=id&order=created_at.desc" | jq -r '.[0].id')
          
          if [ -z "$last_id" ]; then
            echo "Nenhum dado encontrado para exclusão."
            exit 0
          fi
          
          # Testar exclusão de dados
          response=$(curl -s -o /dev/null -w "%{http_code}" -X DELETE "$url?id=eq.$last_id" \
            -H "apikey: $apikey" \
            -H "Content-Type: application/json")
          
          echo "Código de status HTTP da exclusão: $response"
          
          if [ "$response" -ne 204 ]; then
            echo "Falha na exclusão de dados. Código de status HTTP: $response"
            exit 1
          fi
          
          echo "Exclusão de dados bem-sucedida. Código de status HTTP: $response"
